help(binomial)
?dbinomial
?dbinom
dbinom(3, size=3 prob=0.2)
dbinom(3, size=3, prob=0.2)
dbinom(3, size=12, prob=0.2)
ppois(16, lambda = 12, lower = FALSE )
help(binomial)
pnorm(84, mean = 72, sd = 15.2, lower.tail = FALSE)
hist(rnorm(1000, mean = 3, sd = 0.25))
hist(rnorm(10000, mean = 3, sd = 0.25))
escola3 = data.frame(Alunos = c('Lucas', 'Luiza','Fabricia','Rafaela'))
escola
escola3
escola3 = data.frame(Alunos = c('Lucas', 'Luiza','Fabricia','Rafaela'),
Matemática = c(80,65,76,95))
escola3
escola3 = data.frame(Alunos = c('Lucas', 'Luiza','Fabricia','Rafaela'),
Matemática = c(80,65,76,95),
História = c(sample(C,(10:100),1),sample(C,(10:100),1),sample(C,(10:100),1),sample(C,(10:100),1)))
escola3 = data.frame(Alunos = c('Lucas', 'Luiza','Fabricia','Rafaela'),
História = c(sample(C,(10:100),1),sample(C,(10:100),1),sample(C,(10:100),1),sample(C,(10:100),1))
escola3
escola3 = data.frame(Alunos = c('Lucas', 'Luiza','Fabricia','Rafaela'),
Matemática = c(80,65,76,95),
História = c(76,78,82,74),
Física = c(92,86,77,78),
Geografia = c(86,78,56,65))
escola3
escola3$Alunos
summary(escola3)
escola3$Média = NA
escola3
escola3$Média = apply(escola3$Média,1,mean)
escola3$Média = apply(escola3[,c(2,3,4),1,mean)
escola3$Média = apply(escola3[,c(2,3,4)],1,mean)
escola3
escola3$Média = round(escola3$Média)
escola3
escola4 = data.frame(Alunos = c('Lucas', 'Luiza','Fabricia','Rafaela'),
Matemática = c(80,65,76,95),
História = c(76,78,82,74),
Física = c(92,86,77,78),
Geografia = c(86,78,56,65)))
escola4 = data.frame(Alunos = c('Lucas', 'Luiza','Fabricia','Rafaela'),
Matemática = c(80,65,76,95),
História = c(76,78,82,74),
Física = c(92,86,77,78),
Geografia = c(86,78,56,65))
escola4
escola4
escola4$Geografia = appy(escola4[,c(2,3,4)],1,mean)
escola4$Geografia = apply(escola4[,c(2,3,4)],1,mean)
escola4
escola4$Média = NA
escola4$Média = apply(escola4[,c(2,3,4)],1,mean)
escola4
escola4 = data.frame(Alunos = c('Lucas', 'Luiza','Fabricia','Rafaela'),
Matemática = c(80,65,76,95),
História = c(76,78,82,74),
Física = c(92,86,77,78),
Geografia = c(86,78,56,65))
escola4$Média = NA
escola4$Média = apply(escola4[,c(2,3,4)],1,mean)
escola4
escola4$Média = round(escola4$Média)
escola4
t = c(20:200), c(300:1000)
t = [c(20:200), c(300:1000)]
t = list(c=(20:200), d=(300:1000))
typeof(t)
sapply(t,sum)
sapply(t,mean)
# tapply() vs sqldf
install.packages('sqldf')
require(sqldf)
escola2 <- data.frame(Aluno = c('Alan', 'Alice', 'Alana', 'Alan', 'Alice', 'Alana'),
Semestre = c(1, 1, 1, 2, 2, 2),
Matematica = c(90, 80, 85, 87, 56, 79),
Geografia = c(100, 78, 86, 90, 98, 67),
Quimica = c(76, 56, 89, 90, 100, 87))
escola
escola2
sqldf("select aluno, sum(Matematica), sum(Geografia),
sum(Quimica) from escola2 group by aluno")
sqldf("select aluno, sum(Matemática), sum(História),
sum (Física), sum(Geografia), sum(Média)
from escola, group by aluno ")
sqldf("select aluno, sum(Matematica), sum(Historia),
sum (Fisica), sum(Geografia), sum(Media)
from escola, group by aluno ")
sqldf("select aluno, sum(Matematica), sum(Historia),
sum (Fisica), sum(Geografia), sum(Media)from escola, group by aluno ")
sqldf("select aluno, sum(Matematica), sum(Geografia),
sum(Quimica) from escola2 group by aluno")
sqldf("select aluno, sum(Matematica), sum(Historia),
sum (Fisica), sum(Geografia), sum(Media)
from escola, group by aluno ")
sqldf("select aluno, sum(Matematica), sum(Historia),
sum (Fisica), sum(Geografia), sum(Media)
from escola, group by aluno")
by(escola2[, c(2, 3, 4)], escola2$Semestre, colSums)
by(escola[,c(2,3,4)]escola$Semestre, colSums)
by(escola[,c(2,3,4)],escola$Semestre, colSums)
by(escola3[,c(2,3,4)],escola$Semestre, colSums)
by(escola3[,c(2,3,4)],escola3$Semestre, colSums)
by(escola3[, c(2, 3, 4)], escola3$Semestre, colSums)
escola3 = data.frame(Alunos = c('Lucas', 'Luiza','Fabricia','Rafaela'),
Matemática = c(80,65,76,95),
História = c(76,78,82,74),
Física = c(92,86,77,78),
Geografia = c(86,78,56,65))
escola3
escola3$Alunos
summary(escola3)
escola3$Média = NA
escola3
escola3$Média = apply(escola3[,c(2,3,4)],1,mean)
escola3$Média = round(escola3$Média)
escola3
escola4 = data.frame(Alunos = c('Lucas', 'Luiza','Fabricia','Rafaela'),
Matemática = c(80,65,76,95),
História = c(76,78,82,74),
Física = c(92,86,77,78),
Geografia = c(86,78,56,65))
escola4$Média = NA
escola4$Média = apply(escola4[,c(2,3,4)],1,mean)
escola4$Média = round(escola4$Média)
escola4
t = list(c=(20:200), d=(300:1000))
sapply(t,sum)
sapply(t,mean)
escola2 <- data.frame(Aluno = c('Alan', 'Alice', 'Alana', 'Alan', 'Alice', 'Alana'),
Semestre = c(1, 1, 1, 2, 2, 2),
Matematica = c(90, 80, 85, 87, 56, 79),
Geografia = c(100, 78, 86, 90, 98, 67),
Quimica = c(76, 56, 89, 90, 100, 87))
escola2
sqldf("select aluno, sum(Matematica), sum(Geografia),
sum(Quimica) from escola2 group by aluno")
by(escola2[, c(2, 3, 4)], escola2$Semestre, colSums)
sqldf("select aluno, sum(Matematica), sum(Historia),
sum (Fisica), sum(Geografia), sum(Media)
from escola, group by aluno")
by(escola3[, c(2, 3, 4)], escola3$Semestre, colSums)
sqldf("select aluno, sum(Matematica), sum(Historia),
sum (Fisica), sum(Geografia), sum(Media)
from escola3, group by aluno")
escola3 <- data.frame(Alunos = c('Lucas', 'Luiza','Fabricia','Rafaela'),
Matemática = c(80,65,76,95),
História = c(76,78,82,74),
Física = c(92,86,77,78),
Geografia = c(86,78,56,65))
escola3
sqldf("select aluno, sum(Matematica), sum(Historia),
sum (Fisica), sum(Geografia), sum(Media)
from escola3, group by aluno")
by(escola3[, c(2, 3, 4)], escola3$Semestre, colSums)
by(escola3[, c(2, 3, 4)], escola3$Semestre, colSums)
escola2 <- data.frame(Aluno = c('Alan', 'Alice', 'Alana', 'Alan', 'Alice', 'Alana'),
Semestre = c(1, 1, 1, 2, 2, 2),
Matematica = c(90, 80, 85, 87, 56, 79),
Geografia = c(100, 78, 86, 90, 98, 67),
Quimica = c(76, 56, 89, 90, 100, 87))
escola2
by(escola2[, c(2, 3, 4)], escola2$Semestre, colSums)
by(escola2[,c(2,3,4)], escola2$Semestre, colSums)
by(escola2[,c(2,3,4)], escola2$Semestre, colSums)
by(escola2[,c(2,3,4)], escola2$Semestre, colSums)
by(escola2[,C(2,3,4)],escola2$Semestre,colSums)
by(escola2[,C(2,3,4)], escola2$Semestre, colSums)
by(escola2[,c(2,3,4)], escola2$Semestre, colSums)
by(escola2[,c(2,3,4)], escola2$Semestre, colSums)
by(escola2[,c(2,3,4)], escola2$Semestre, colSums)
lista1 <- list(a = (1:10), b = (45:77))
lista1
lapply(lista1, sum)
sapply(lista1, sum)
lapply(lista1,mean)
sapply(lista1,mean)
lapply(lista1, sum)
sapply(lista1, sum)
vapply(lista1, fivenum, c(Min. = 0, "1stQu." = 0, Median = 0,
"3rd Qu." = 0, Max = 0))
vapply(lista1,sum,)
vapply(lista1,sum,c(Min. = 0, "1stQu." = 0, Median = 0,
"3rd Qu." = 0, Max = 0))
vapply(lista1,fivenum,c(Min. = 0, "1stQu." = 0, Median = 0,
"3rd Qu." = 0, Max = 0))
vapply(lista1,fournum,c(Min. = 0, "1stQu." = 0, Median = 0,
"3rd Qu." = 0, Max = 0))
vapply(lista1,onenum,c(Min. = 0, "1stQu." = 0, Median = 0,
"3rd Qu." = 0, Max = 0))
vapply(lista1,fivenum,c(Min. = 0, "1stQu." = 0, Median = 0,
"3rd Qu." = 0, Max = 0))
replicate(7, runif(10))
# replicate
?replicate
# replicate
?replicate
# replicate
?replicate
?runif
# mapply()
?mapply
mapply(rep, 1:4, 4:1)
mapply(rep, 1:4, 4:1)
# rapply()
?rapply
lista2 <- list(a = c(1:5), b = c(6:10))
lista2
rapply(lista2, sum)
rapply(lista2, sum, how = "list")
lista1
rapply(lista1,sum)
rapply(lista1,sum,how = "list")
rapply(lista1, mean)
rapply(lista1, mean, how = "list")
# Escopo
print(num)
jogando_dados <- function() {
num <- sample(1:6, size = 1) #Local
num
}
jogando_dados()
# Escopo
print(num)
num <- c(1:6)
num #Global
# Funções sem número definido de argumentos
vec1 <- (10:13)
vec2 <- c("a", "b", "c", "d")
vec3 <- c(6.5, 9.2, 11.9, 5.1)
myfunc3 <- function(...){
df = data.frame(cbind(...))
print(df)
}
myfunc3(vec1)
myfunc3(vec2, vec3)
myfunc3(vec1, vec2, vec3)
vec1 <- (20:67)
vec2 <- c("K", "y", "l", "e")
vec3 <- c(9.8, 7.2, 25.9, 8.6)
func1 <- function(...) {
df1 = data.frame(cbind(...))
print(df1)
}
func1(vec1)
func1(vec2, vec3)
func1(vec1, vec2, vec3)
m1 <- matrix(C(21:37);nrow = 4, ncol(4))
m1 <- matrix(C(21:37),nrow = 4, ncol(4))
?matrix
a <- c(21:37)
a
m1 <- matrix(C(22:37),nrow = 4, ncol(4))
m1 <- matrix(C(22:25),C(15:18),nrow = 4, ncol(4))
m1 <- matrix(C(22:25),C(15:18)),nrow = 4, ncol(4))
m1 <- matrix(C(22:25)),nrow = 4, ncol(4))
m1 <- matrix(C(22:36)),nrow = 4, ncol(4))
m1 <- matrix(C(22:36),nrow = 4, ncol(4))
m1 <- matrix(C(1,2,3,4, 5,6,7,8),nrow = 4, ncol(4))
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mdat
m1 <- matrix(C(1,2,3,4, 5,6,7,8),nrow = 4, ncol= 4)
m1 <- matrix(c(1,2,3,4, 5,6,7,8),nrow = 4, ncol= 4)
m1
m1 <- matrix(c(20:36),nrow = 4, ncol= 4)
m1 <- matrix(c(20:35),nrow = 4, ncol= 4)
m1
m1 <- matrix(c(20:35),nrow = 4, ncol= 4,dimnames = list(c("linha 1, linha2",
"linha3","linha4"), c("col1","col2","col3","col4")))
m1 <- matrix(c(20:35),nrow = 4, ncol= 4,dimnames = list(c("linha 1, linha2",llinha3","linha4"), c("col1","col2","col3","col4")))
m1 <- matrix(c(20:35),nrow = 4, ncol= 4,dimnames = list(c("linha 1",
"linha2","llinha3","linha4"), c("col1","col2","col3","col4")))
m1
escola: <-data.frame(Aluno = c('Alan', 'Alice', 'Alana', 'Aline',
'Alex', 'Ajay'),Matemática = c(90, 80, 85, 87, 56, 79),
Geografia = c(100, 78, 86, 90, 98, 67),Química = c(76, 56, 89, 90, 100, 87))
escola: <-data.frame(Aluno = c('Alan', 'Alice', 'Alana', 'Aline',
'Alex', 'Ajay'),Matemática = c(90, 80, 85, 87, 56, 79),
Geografia = c(100, 78, 86, 90, 98, 67), Química = c(76, 56, 89, 90, 100, 87))
Matemática = c(90, 80, 85, 87, 56, 79)
Geografia = c(100, 78, 86, 90, 98, 67)
Química = c(76, 56, 89, 90, 100, 87)
Aluno = c('Alan', 'Alice', 'Alana', 'Aline',
'Alex', 'Ajay')
escola <- data.frame(Aluno = c('Alan', 'Alice', 'Alana', 'Aline',
'Alex', 'Ajay'),Matemática = c(90, 80, 85, 87, 56, 79),
Geografia = c(100, 78, 86, 90, 98, 67), Química = c(76, 56, 89, 90, 100, 87))
escola$Media = NA
escola
d = mean(Matemática)
d
escola$Media = (mean(Matemática))
escola
mean(Matemática,Geografia)
mean((Matemática),(Geografia))
mean(c(Matemática,Geografia))
mean(c(Matemática),c(Geografia))
c(mean(Matemática),(Geografia))
c(mean(Matemática),mean(Geografia))
c(mean(Matemática:Geografia))
escola$Media = c(mean(Matemática),mean(Geografia),mean(Química))
escola
escola$Media = c(mean(Aluno))
escola$Media = c(mean(Aluno[Matemática]))
escola$Media = c(Aluno(mean(Matemática))
#escola$Media = c(mean(Matemática),mean(Geografia),mean(Química))
escola
escola$Media = c(Aluno(mean([Matemática]))
#escola$Media = c(mean(Matemática),mean(Geografia),mean(Química))
escola
escola$Media = apply(escola,1,mean)
escola$Media = apply(escola[(c(2,3,4))],1,mean)
#escola$Media = c(mean(Matemática),mean(Geografia),mean(Química))
escola
escola$Media = round(escola$Media)
#escola$Media = c(mean(Matemática),mean(Geografia),mean(Química))
escola
escola$Media = round(escola$Media,2)
#escola$Media = c(mean(Matemática),mean(Geografia),mean(Química))
escola
x <- c(0:10, 50)
xm <- mean(x)
c(xm, mean(x, trim = 0.10))
escola$Media = apply(escola[(c(2,3,4))],1,mean(trim = 0.10))
escola$Media = apply(escola[(c(2,3,4))],1,mean)
escola$Media = round(escola$Media,digits = 2)
#escola$Media = c(mean(Matemática),mean(Geografia),mean(Química))
escola
lista3 = C(1:3)
lista3 = list(C(1:3))
lista3 = list(c(1:3))
lista3
class(lista3)
sum(lista3)
soma = sum(lista3)
lista3 = (c(1:3))
soma = sum(lista3)
lista3
soma
lista3 = list(c(1:3))
lista3
lista3[1]
soma = sum(lista3[1])
soma = sum(lista3[])
soma = sum(lista3[,3])
soma = sum(lista3[,2])
soma = sum(lista3[,1])
soma = sum(lista3[1,])
lista3[2]
lista3 = list(c(1:3),c(10:20))
lista3[2]
lista3[]
soma = sum(lista3[[1,]])
soma = sum(lista3[[1]])
soma
soma2 = sum(lista3[[2]])
soma2
Vec4 = as.vector(lista3)
class Vec4
class(Vec4)
typeof(Vec4)
mode(Vec4)
Vec4 = as.vector(lista3)
typeof(Vec4)
mode(Vec4)
vec4
vec4
is.vector(Vec4)
Vec4
vec4
Vec4
Vec4
lista3[]
frasesstr <-c("Expressoes", "regulares", "em linguagem R",
"permitem a busca de padroes", "e exploracao de textos",
"podemos buscar padroes em digitos","como por exemplo",
"10992451280")
frasesstr
install.packages(c("tm", "SnowballC", "wordcloud", "RColorBrewer"))
library(tm)
library(SnowballC)
library(wordcloud)
library(RColorBrewer)
install.packages("ggplot2")
library(ggplot2)
# Plotando um gráfico básico com qplot()
data(tips, package = 'reshape2')
qplot(total_bill, tip, data = tips, geom = "point")
data = data.frame(mtcars)
data
# Dados
data = data.frame(cond = rep(c("Obs 1", "Obs 2"),
each = 10), var1 = 1:100 +
rnorm(100,sd = 9), var2 = 1:100 +
rnorm(100,sd = 16))
# Plot
ggplot(data, aes(x = var1, y = var2)) +
geom_point(shape = 1) +
geom_smooth(method = lm , color = "red", se = FALSE)
data
data
data1 = data.frame(mtcars)
data1
ggplot(data1,aes(x=data1$mpg, y=data1$disp)) + geom_point(shape = 1) +
geom_smooth(method = lm, color = "red", se = FALSE )
# Plot
ggplot(data, aes(x = var1, y = var2)) +
geom_point(shape = 1) +
geom_smooth(method = lm , color = "red", se = FALSE)
ggplot(data1,aes(x=data1$mpg, y=data1$disp)) + geom_point(shape = 1) +
geom_smooth(method = lm, color = "red", se = FALSE )
install.packages("RSQLite")
library(RSQLite)
setwd("D:/Analista-de-Dados/Formação Cientista de Dados/4. Usando R para importação de dados")
rs = dbSendQuery(con, query)
#criando driver e conexão ao banco de dados
drv = dbDriver("SQLite")
con = dbConnect(drv,dbname = "exemplo.db")
dbListTables(con)
#Criando uma tabela e carregando com dados do dataset mtcars
dbWriteTable(con,"mtcars", mtcars, row.names = TRUE)
#Listando uma tabela
dbListTables(con)
dbExistsTable(con,"mtcars")
dbExistsTable(con, "mtcars2")
dbListFields(con, "mtcars")
# Lenco conteúdo da tabela
dbReadTable(con,"mtcars")
# Criando apenas definição da Tabela
dbWriteTable(con,"mtcars2",mtcars[0,],row.names=TRUE)
system("del.mtcars2.db")
System("del.mtcars2.db")
system("del.mtcars2.db")
#criando driver e conexão ao banco de dados
drv = dbDriver("SQLite")
con = dbConnect(drv,dbname = "exemplo.db")
dbListTables(con)
#Criando uma tabela e carregando com dados do dataset mtcars
dbWriteTable(con,"mtcars", mtcars, row.names = TRUE)
#Listando uma tabela
dbListTables(con)
dbExistsTable(con,"mtcars")
dbExistsTable(con, "mtcars2")
dbListFields(con, "mtcars")
# Lenco conteúdo da tabela
dbReadTable(con,"mtcars")
# Criando apenas definição da Tabela
dbWriteTable(con,"mtcars2",mtcars[0,],row.names=TRUE)
dbExistsTable(con, "mtcars2")
dbListTables(con)
dbReadTable(con, "mtcars2")
dbReadTable(con,"mtcars")
dbListFields(con, "mtcars")
query = "select row_names from mtcars"
rs = dbSendQuery(con,query)
dados = fetch(rs, n=1)
dados
query = "select row_names from mtcars"
rs = dbSendQuery(con,query)
while (!dbHasCompleted(rs))
{
dados = fetch(rs, n = 1)
print(dados$row_names)
}
query = "select disp, hp from mtcars where disp>160"
rs = dbSendQuery(con,query)
dados = fetch(rs, n=1)
dados
query = "select row_names, avg(hp) from mtcars group by row_names"
rs = dbSendQuery(con, query)
dados = fetch(rs, n=1)
dados
dados = fetch(rs, n= -1)
dados
# Criando uma tabela a partir de um arquivo
dbWriteTable(con, "Base BI - Processos Judiciais 2017", Base BI - Processos Judiciais 2017.xlsx, header = T)
# Criando uma tabela a partir de um arquivo
dbWriteTable(con, "Base BI - Processos Judiciais 2017", Base BI - Processos Judiciais 2017.csv, sep = ",", header = T)
# Criando uma tabela a partir de um arquivo
dbWriteTable(con, "Base BI - Processos Judiciais 2017", Base BI - "Processos Judiciais 2017.csv", sep = ",", header = T)
# Criando uma tabela a partir de um arquivo
dbWriteTable(con, "Base BI - Processos Judiciais 2017", Base BI - "Processos Judiciais 2017.txt", sep = ",", header = T)
# Criando uma tabela a partir de um arquivo
dbWriteTable(con, "Juridico", Base BI - "Juridico.txt", sep = ",", header = T)
# Criando uma tabela a partir de um arquivo
dbWriteTable(con, "Juridico", "Juridico.txt", sep = ",", header = T)
# Criando uma tabela a partir de um arquivo
dbWriteTable(con, "Juridico", "Juridico.csv", sep = ",", header = T)
dbWriteTable(con, "Juridico", "Juridico.txt", sep = ",", header = T)
dbWriteTable(con, "Juridico", "Juridico.txt", sep = ",",)
# Criando uma tabela a partir de um arquivo
dbWriteTable(con, "Exemplo", "Exemplo.xlsx", header = T)
# Criando uma tabela a partir de um arquivo
dbWriteTable(con, "Exemplo", "Exemplo.txt",sep = ",", header = T)
# Criando uma tabela a partir de um arquivo
dbWriteTable(con, "Exemplo", "Exemplo.txt",sep = "|", header = T)
dbListTables(con)
dbReadTable(con,"Exemplo")
dbWriteTable(con, "Exemplo2", "Exemplo.csv",sep=",",header = T)
dbWriteTable(con, "Exemplo2", "Exemplo.csv",sep="|",header = T)
dbListTables(con)
dbReadTable(con, "Exemplo2")
dbListFields(con, "Exemplo2")
